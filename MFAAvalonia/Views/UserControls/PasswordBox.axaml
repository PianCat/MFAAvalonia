<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:controls="using:MFAAvalonia.Views.UserControls"
    xmlns:converters="clr-namespace:MFAAvalonia.Helper.Converters"
    xmlns:fluent="clr-namespace:FluentIcons.Avalonia.Fluent;assembly=FluentIcons.Avalonia.Fluent"
    xmlns:markup="https://codewf.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <controls:PasswordBox />
    </Design.PreviewWith>

    <Style Selector="controls|PasswordBox">
        <Style.Resources>
            <markup:IfConditionConverter x:Key="IfConditionConverter">
                <markup:IfConditionConverter.True>
                    <DataTemplate>
                        <fluent:FluentIcon
                            Foreground="{DynamicResource SukiLowText}"
                            Height="16"
                            Icon="EyeOff"
                            IconSize="Size16"
                            IconVariant="Regular"
                            Width="16" />
                    </DataTemplate>
                </markup:IfConditionConverter.True>
                <markup:IfConditionConverter.False>
                    <DataTemplate>
                        <fluent:FluentIcon
                            Foreground="{DynamicResource SukiLowText}"
                            Height="16"
                            Icon="Eye"
                            IconSize="Size16"
                            IconVariant="Regular"
                            Width="16" />
                    </DataTemplate>
                </markup:IfConditionConverter.False>
            </markup:IfConditionConverter>
        </Style.Resources>
        <Setter Property="Template">
            <ControlTemplate>
                <Grid>
                    <TextBox
                        Name="PART_TextBox"
                        Padding="6,0,28,0"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                        <TextBox.PasswordChar>
                            <MultiBinding Converter="{converters:BoolToPasswordCharConverter}">
                                <Binding Path="IsPasswordVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding
                                    FallbackValue="*"
                                    Path="PasswordChar"
                                    RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </TextBox.PasswordChar>
                    </TextBox>
                    <ToggleButton
                        Background="Transparent"
                        Classes="Basic Round"
                        ContentTemplate="{TemplateBinding IsPasswordVisible,
                                                          Converter={StaticResource IfConditionConverter}}"
                        Cursor="Arrow"
                        Focusable="False"
                        HorizontalAlignment="Right"
                        IsChecked="{TemplateBinding IsPasswordVisible,
                                                    Mode=TwoWay}"
                        Margin="0,0,5,0"
                        Name="PART_ToggleButton"
                        Opacity="0.7"
                        Width="35"
                        ZIndex="1">

                        <ToggleButton.Styles>
                            <Style Selector="ToggleButton:pointerover">
                                <Setter Property="Opacity" Value="1" />
                            </Style>
                        </ToggleButton.Styles>
                    </ToggleButton>
                </Grid>

            </ControlTemplate>
        </Setter>
    </Style>
</Styles>