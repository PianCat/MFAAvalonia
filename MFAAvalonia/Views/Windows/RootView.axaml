<suki:SukiWindow
    BackgroundAnimationEnabled="{Binding BackgroundAnimations, Source={x:Static helper:Instances.GuiSettingsUserControlModel}}"
    BackgroundStyle="{Binding BackgroundStyle, Source={x:Static helper:Instances.GuiSettingsUserControlModel}}"
    BackgroundTransitionsEnabled="{Binding BackgroundTransitions, Source={x:Static helper:Instances.GuiSettingsUserControlModel}}"
    IsVisible="{Binding IsWindowVisible}"
    MinHeight="360"
    MinWidth="650"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d"
    x:Class="MFAAvalonia.Views.Windows.RootView"
    x:DataType="windows:RootViewModel"
    xmlns="https://github.com/avaloniaui"
    xmlns:avalonia="https://github.com/projektanker/icons.avalonia"
    xmlns:calcBinding="clr-namespace:CalcBinding;assembly=CalcBindingAva"
    xmlns:converters="clr-namespace:MFAAvalonia.Helper.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:MFAAvalonia.Extensions"
    xmlns:fluent="clr-namespace:FluentIcons.Avalonia.Fluent;assembly=FluentIcons.Avalonia.Fluent"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:helper="clr-namespace:MFAAvalonia.Helper"
    xmlns:markup="https://codewf.com"
    xmlns:markupExtensions="clr-namespace:FluentIcons.Avalonia.Fluent.MarkupExtensions;assembly=FluentIcons.Avalonia.Fluent"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pages="clr-namespace:MFAAvalonia.Views.Pages"
    xmlns:suki="https://github.com/kikipoulet/SukiUI"
    xmlns:userControls="clr-namespace:MFAAvalonia.Views.UserControls"
    xmlns:vm="using:MFAAvalonia.ViewModels"
    xmlns:windows="clr-namespace:MFAAvalonia.ViewModels.Windows"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <suki:SukiWindow.Styles>
        <Style Selector="ToggleButton.SP:pointerover">
            <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor75}" />
        </Style>
        <Style Selector="ToggleButton.SP:checked">
            <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" />
        </Style>
    </suki:SukiWindow.Styles>
    <suki:SukiWindow.Title>
        <MultiBinding Converter="{converters:TitleConverter}" Mode="OneWay">
            <Binding Path="CustomTitle" />
            <Binding Path="IsCustomTitleVisible" />
            <markup:I18nBinding>
                <x:Arguments>
                    <x:Static Member="helper:LangKeys.AppTitle" />
                </x:Arguments>
            </markup:I18nBinding>
            <Binding Path="Version" />
            <Binding Path="ResourceName" />
            <Binding Path="ResourceVersion" />
            <Binding Path="IsResourceNameVisible" />
            <markup:I18nBinding>
                <x:Arguments>
                    <x:Static Member="helper:LangKeys.DebugMode" />
                </x:Arguments>
            </markup:I18nBinding>
            <Binding Path="IsDebugMode" />
        </MultiBinding>
    </suki:SukiWindow.Title>
    <suki:SukiWindow.RightWindowTitleBarControls>
        <ToggleButton
            Classes="SP Basic Round"
            IsCheckedChanged="ToggleWindowTopMost"
            Margin="0,-3,0,-3"
            x:Name="btnPin">
            <ToggleButton.RenderTransform>
                <TranslateTransform X="-8" />
            </ToggleButton.RenderTransform>

            <fluent:FluentIcon Icon="Pin" IconSize="Size16" />
        </ToggleButton>
    </suki:SukiWindow.RightWindowTitleBarControls>
    <suki:SukiWindow.LogoContent>
        <Image
            Height="20"
            Source="{x:Static helper:IconHelper.Icon}"
            Stretch="Uniform"
            Width="20" />

    </suki:SukiWindow.LogoContent>
    <Design.DataContext>
        <windows:RootViewModel />
    </Design.DataContext>
    <suki:SukiWindow.Hosts>
        <suki:SukiToastHost Manager="{x:Static helper:Instances.ToastManager}" />
        <suki:SukiDialogHost Manager="{x:Static helper:Instances.DialogManager}" Name="DialogHost" />
    </suki:SukiWindow.Hosts>
    <Grid>
        <suki:SukiSideMenu IsMenuExpanded="False" IsSearchEnabled="False">
            <!-- <suki:SukiSideMenu.Styles> -->
            <!--     <Style Selector="Image.AppIcon"> -->
            <!--         <Setter Property="Transitions"> -->
            <!--             <Transitions> -->
            <!--                 <DoubleTransition Duration="0.1" Property="Opacity" /> -->
            <!--             </Transitions> -->
            <!--         </Setter> -->
            <!--         <Style Selector="^:pointerover"> -->
            <!--             <Setter Property="Opacity" Value="0.5" /> -->
            <!--         </Style> -->
            <!--     </Style> -->
            <!-- </suki:SukiSideMenu.Styles> -->
            <suki:SukiSideMenu.Items>
                <suki:SukiSideMenuItem
                    Header="{markup:I18n {x:Static helper:LangKeys.Home}}"
                    Icon="{markupExtensions:FluentIcon Icon=TasksApp,
                                                       IconVariant=Regular}"
                    PageContent="{extensions:ServiceProvider ServiceType={x:Type pages:TaskQueueView}}" />
                <suki:SukiSideMenuItem
                    Header="{markup:I18n {x:Static helper:LangKeys.ResourceOption}}"
                    Icon="{markupExtensions:FluentIcon Icon=Apps,
                                                       IconVariant=Regular}"
                    IsVisible="False"
                    PageContent="{extensions:ServiceProvider ServiceType={x:Type pages:ResourcesView}}" />
                <suki:SukiSideMenuItem
                    Header="{markup:I18n {x:Static helper:LangKeys.Settings}}"
                    Icon="{markupExtensions:FluentIcon Icon=Settings,
                                                       IconVariant=Regular}"
                    PageContent="{extensions:ServiceProvider ServiceType={x:Type pages:SettingsView}}" />
            </suki:SukiSideMenu.Items>

            <suki:SukiSideMenu.HeaderContent>
                <!--  Header Content  -->
            </suki:SukiSideMenu.HeaderContent>

            <suki:SukiSideMenu.FooterContent />
        </suki:SukiSideMenu>
    </Grid>

</suki:SukiWindow>